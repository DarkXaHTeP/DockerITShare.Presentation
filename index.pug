doctype html
html(lang="en")
    head
        title Docker
        meta(charset="utf-8")
        meta(http-equiv="X-UA-Compatible", content="IE=edge")
        link(rel="stylesheet", href="css/zenburn.css")
        link(rel="stylesheet", href="css/reveal.css")
        link(rel="stylesheet", href="css/theme/league.css")
        link(rel="stylesheet", href="css/main.css")
    body
        .reveal
            .slides
                section
                    h2 No Microservices?
                    h1
                        img.no-styles.docker-logo(src="img/docker_logo.png")
                        | Docker
                    h2 is still your best friend
                    aside.notes Всем привет, сегодня мы собрались для того чтобы пообщаться и может даже похоливарить на тему докера; Меня зовут Владимир; Давайте начнем с очевидных вопросов. Кто игрался с докером? А кто использовал в продакшн? Кто вообще не слышал?
                section
                    section
                        h3 About me
                        img.epam-logo.fragment.fade-in(src="img/EPAM_logo.png")
                        ul
                            li.fragment.fade-right 4+ years in EPAM
                            li.fragment.fade-right Lead Software Engineer
                            li.fragment.fade-right Fullstack Web Developer
                            li.fragment.fade-right .NET C#/F# and JavaScript/TypeScript
                            li.fragment.fade-right Currently TeamLead on JETC-DEV project
                        aside.notes Прежде чем начать, расскажу немного о себе; Сначала про работу; 4+ года и считаю что здесь можно расти и развивать и дальше
                    section
                        img.indian-img(src="img/indian_scientist.png")
                        ul
                            li.fragment.fade-right Love GitHub
                            li.fragment.fade-right
                                a(href="https://github.com/DarkXaHTeP") https://github.com/DarkXaHTeP
                            li.fragment.fade-right Develop and contribute to Open Source
                            li.fragment.fade-right One of projects has 60 000+ downloads
                            li.fragment.fade-right Try to keep up with trends
                            li.fragment.fade-right Don't like serious presentations
                        aside.notes Если же говорить про свободное время, то

                section
                    section
                        h3 How I learned Docker
                        p
                            img(src="img/learning.gif")
                        ul
                            li.fragment.fade-right First impressions in late 2015
                            li.fragment.fade-right Usage on project since November 2016
                        aside.notes В нескольких словах затрону тему того как я познакомился с Докером
                    section
                        h3 You could do the same!
                        p
                            img(src="img/welcome.gif")
                        aside.notes По ходу презентации вы сможете понять что вы так же можете начать его использовать даже если проект этого не предусматривает
                section
                    section
                        h3 Agenda
                        ul
                            li What's Docker?
                            li Containers
                            li Dockerfile
                            li Demo
                                ul
                                    li Build and run a container
                                    li Docker Ecosystem
                            li Why do we need it?
                            li What about Windows?
                    section
                        h3 Agenda
                        ul
                            li Local Environment
                            li docker-compose.yml
                            li Continuous Integration
                            li Demo
                                ul
                                    li docker-compose
                                    li CI on JETC-DEV
                    section
                        h3 Agenda
                        ul
                            li Pet Projects
                                ul
                                    li Source Control + CI
                                    li Hosting
                                    li Free Domain and HTTPS
                                    li ELK stack
                                    li Demo
                                    li Why and what to try next
                section
                    p Docker is a set of tools designed to make it easier to create, deploy, and run applications by using containers
                    p
                        img(src="img/containers.png" style="display:block; margin: 0 auto; height: 30vh")
                    ul
                        li.fragment.fade-right Containers existed before Docker (LCX)
                        li.fragment.fade-right Docker CLI, Docker Compose, Docker Hub, Docker Swarm
                    aside.notes Сначала рассмотрим определение; Вызывает недоумение, не так ли?; Многие путают понятия докера и контейнеров; ... Докер же в свою очередь сделал их удобными благодаря набору утилит
                section
                    section
                        h3 Containers
                        p
                            img(src="img/vm-vs-container.jpg")
                        aside.notes Похожи тем что обеспечивают изоляцию приложений друг от друга; Переиспользуют ядро; Меньше весят; Меньше ресурсов быстрее старт
                    section
                        h3 How it works?
                        ul
                            li Containers rely on Linux kernel features
                            li.fragment.fade-right Thank you, Linus Torvalds
                        p
                            img.fragment.fade-in(src="img/linus_not_serious.jpg")
                        aside.notes Как же это происходит? Если вкратце, то все стало возможным из-за фич ОС линукс, которые вкупе и дают нам контейнеры. За которые можно благодарить создателя ядра - Линуса
                    section
                        h3 What features?
                        ul
                            li.fragment.fade-right Process isolation (namespaces)
                            li.fragment.fade-right Resource limitation (cgroups)
                            li.fragment.fade-right Virtual Networking
                            li.fragment.fade-right Layered copy-on-write filesystem
                section
                    section
                        h3 Dockerfile
                        pre
                            code.docker
                                | FROM node:10.15.3-stretch
                                |
                                | WORKDIR /app
                                |
                                | COPY package*.json ./
                                | RUN npm install
                                |
                                | COPY . .
                                |
                                | EXPOSE 8080
                                | CMD [ "npm", "start" ]
                    section
                        h3 .NET Core Dockerfile
                        pre
                            code.docker
                                | # build backend
                                | FROM mcr.microsoft.com/dotnet/core/sdk:2.2.105-alpine3.9 AS build-env
                                | WORKDIR /app
                                |
                                | COPY . ./
                                |
                                | RUN dotnet publish SampleApp.Web.csproj -c Release -r linux-musl-x64 -o out
                                |
                                | # build runtime image
                                | FROM mcr.microsoft.com/dotnet/core/runtime-deps:2.2.3-alpine3.9
                                | WORKDIR /app
                                | COPY --from=build-env /app/out ./
                                | ENV ASPNETCORE_URLS http://0.0.0.0:5000
                                | EXPOSE 5000
                                | ENTRYPOINT ["./SampleApp.Web"]
                section
                    h2 DEMO
                    p
                        img(src="img/dancing_crab.webp")
                section
                    h3 Why?
                    img.fragment.fade-in(src="img/why.jpg" style="display:block; margin: 0 auto; height: 20vh")
                    ul
                        li.fragment.fade-right Ease of use because of abstraction
                        li.fragment.fade-right Isolation
                        li.fragment.fade-right Infrastructure as a code
                        li.fragment.fade-right Same local, QA and PROD envs
                    aside.notes Зачем нам нужен еще один набор тулов, учить новую терминологию и тд?
                section
                    section
                        h3 What about Windows?
                        p.fragment.fade-in
                            img(src="img/linus_fuck.gif")
                    section
                        h3 Actually, it's not that bad, but...
                        ul
                            li.fragment.fade-right  Windows Server 2016 and Windows 10
                            li.fragment.fade-right  Windows Nano and Core base images
                            li.fragment.fade-right  Run only on Windows
                            li.fragment.fade-right  Huge images
                            li.fragment.fade-right  4+ GB of memory used
                            li.fragment.fade-right  Long start time
                            li.fragment.fade-right Breaking changes and incompatibility between releases
                section
                    section
                        h3 Let's imagine that you've got a project with
                        ul
                            li.fragment.fade-right SQL Server
                            li.fragment.fade-right Apache Kafka
                            li.fragment.fade-right Zookeeper
                            li.fragment.fade-right Kafka Lenses (UI for Kafka)
                            li.fragment.fade-right Hashicorp Consul
                            li.fragment.fade-right Hashicorp Vault
                            li.fragment.fade-right Hashicorp Vault UI
                            li.fragment.fade-right Redis
                            li.fragment.fade-right 10+ developers
                    section
                        img(src="img/mind-blow.gif")
                    section
                        h4 One docker-compose.yml to rule them all
                        p  
                            img(src="img/one_ring_to_rule.jpg")
                        pre.fragment.fade-right
                            code.bash docker-compose up
                    section
                        h3 docker-compose.yml
                        pre
                            code.yml
                                | version: '2'
                                | services:
                                |     sqlserver:
                                |         image: mcr.microsoft.com/mssql/server:2017-CU13-ubuntu
                                |         container_name: docker-itshare-sqlserver
                                |         ports:
                                |         - 1433:1433
                                |         environment:
                                |             ACCEPT_EULA: Y
                                |             SA_PASSWORD: Qwerty123
                                |             MSSQL_PID: Developer
                                |         volumes:
                                |         - sqldata:/var/opt/mssql
                                |    redis:
                                |        image: redis:5.0.4-alpine3.9
                                |        container_name: docker-itshare-redis
                                |        ports:
                                |        - 6379:6379
                                | volumes:
                                |     sqldata:
                    section
                        p
                            img(src="img/dev_env.jpg")
                section
                    section
                        h3 Continuous Integration
                        ul
                            li.fragment.fade-right Dependencies
                            li.fragment.fade-right Versions
                            li.fragment.fade-right DevOps responsibilities?
                        pre.fragment.fade-right
                            code.bash
                                | docker run -i --rm -v ./TestProject.UI:/data \
                                |   node:10.15.3-alpine \
                                |   sh -c "cd /data && npm install && npm run lint && ./node_modules/.bin/ng build --prod --no-progress --delete-output-path false"
                        pre.fragment.fade-right
                            code.bash
                                | docker run -i --rm -v ./TestProject.UI:/data
                                |  mcr.microsoft.com/dotnet/core/sdk:2.2.105-alpine3.9
                                |  sh -c "cd /data && dotnet restore && dotnet publish -c Release --self-contained -r win10-x64 -o out"
                section
                    h2 DEMO
                    p
                        img(src="img/penguin.gif")
                section
                    h3 Want to have cool pet projects?
                    p
                        img(src="img/i-wanna-try.gif")
                section
                    section
                        h3 Source Control and CI
                        p
                            img(src="img/github.png" style="float: left; height: 25vh").fragment.fade-in
                            img(src="img/travis.jpg" style="height: 25vh").fragment.fade-in
                    section
                        h3 .travis.yml
                        pre
                            code.yaml
                                | language: node_js
                                | node_js:
                                | - 10.15.3
                                | before_install:
                                | - chmod 755 ./deploy.sh
                                | install: npm install
                                | script: npm run pug:compile
                                | deploy:
                                |   provider: script
                                |   script: ./deploy.sh
                                |   skip_cleanup: true
                    section
                        h3 .travis.yml with Docker
                        pre
                            code.yaml
                                | language: bash
                                | services:
                                | - docker
                                | script:
                                | - docker build -t darkxahtep/docker-itshare-sampleapp:$TRAVIS_BUILD_NUMBER .
                                | after_success:
                                | - if [ "$TRAVIS_BRANCH" == "master" ]; then
                                |     docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
                                |     docker push darkxahtep/docker-itshare-sampleapp;
                                |     fi
                section
                    section
                        h3 Hosting
                        p
                            img(src="img/microsoft-azure.png" style="float: left; height: 25vh; background:white").fragment.fade-in
                            img(src="img/msdn-logo.png" style="height: 25vh").fragment.fade-in
                    section
                        h3 Main Problem
                        p.fragment.fade-right There is a 50$ Limit per month
                        p.fragment.fade-in
                            img(src="img/money.gif")
                    section
                        h3 Single VM to run it all
                        ul
                            li.fragment.fade-right Cheapest region (e.g. EastUS2)
                            li.fragment.fade-right B2s tier with SSD (2 vCPU, 4GB RAM)
                            li.fragment.fade-right Core OS Linux (Docker preinstalled)
                            li.fragment.fade-right ~41$ per month
                    section
                        h3 Time to deploy containers to cloud
                        p
                            img(src="img/containers_to_cloud.jpeg")
                section
                    h3 Free Domain and HTTPS
                    ul
                        li *.pp.ua through https://nic.ua
                        li *.tk and *.ml through https://dot.tk
                        li Let's Encrypt https://letsencrypt.org/
                section
                    h3 What else?
                    p
                        img(src="img/elk.webp" style="background:white").fragment.fade-in
                section
                    h3 Demo
                    p
                        img(src="img/demo_simpsons.gif")
                section
                    h3 Things to try next
                    ul
                        li Notifications to Telegram using ElastAlert
                        li Switch to Kubernetes
                        li Use Splunk instead of ELK
                        li 2-3 smaller VMs and load balancing
                        li Create Raspberry PI cluster
                section
                    h3 Questions?
                    p  
                        img(src="img/question.gif")
        script(src="lib/js/head.min.js")
        script(src="js/reveal.js")
        script(src="js/main.js")
